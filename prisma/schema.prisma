generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String? @db.Text
  access_token             String? @db.Text
  expires_at               Int?
  refresh_token_expires_in Int?
  token_type               String?
  scope                    String?
  id_token                 String? @db.Text
  session_state            String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Connection {
  id      String  @id @default(cuid())
  name    String
  company String
  User    User?   @relation(fields: [userId], references: [id])
  userId  String?
}

model Experience {
  id          String   @id @default(cuid())
  role        String
  start       DateTime
  end         DateTime
  description String
  User        User?    @relation(fields: [userId], references: [id])
  userId      String?
}

model User {
  id            String       @id @default(cuid())
  name          String?
  bio           String?      @db.Text
  age           Int?
  email         String?      @unique
  password      String
  connections   Connection[]
  employer      String
  stack         String[]
  languages     String[]
  interests     String[]
  experience    Experience[]
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
